{"data":{"site":{"siteMetadata":{"title":"jarednielsen.com","author":"Jared Nielsen"}},"markdownRemark":{"id":"de9b0c1c-a905-5366-b8e4-069f3ab5f875","excerpt":"There’s more than one way to scaffold a boilerplate MERN application and deploy it to Heroku. This method is straightforward and easy to maintain.  The…","html":"<p><img src=\"./jarednielsen-mern-deploy-heroku.png\"></p>\n<p>There’s more than one way to scaffold a boilerplate MERN application and deploy it to Heroku. This method is straightforward and easy to maintain. </p>\n<p>The <a href=\"https://github.com/nielsenjared/mern\">repository containing starter code is available on GitHub</a></p>\n<h2>Initialize Your Project with npm</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">mkdir mern\ncd mern\nnpm init</code></pre></div>\n<p>During the init process you will be prompted to add a GitHub repository. Now would be a good time to make a new project on GitHub. Add the repo link to your package.json when prompted.</p>\n<h2>Initialize Your Project with Git</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git init\ngit remote add origin &lt;URL-to-your-repo&gt;</code></pre></div>\n<p>Add <code>node_modules</code> to your <code>.gitignore</code>.</p>\n<h2>Set Up a Simple Express Server</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">npm install express --save</code></pre></div>\n<p>Add a server.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3001</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Start the server and navigate to localhost:3001 to verify that it works. You don’t need to use port 3001, but don’t use 3000. That’s the default for Create React App.</p>\n<h2>Deploy to Heroku</h2>\n<p>Do not wait until the last minute to deploy! Let’s deploy this now so we can test deployment periodically.</p>\n<p>Update package.json:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"node server.js\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Then log into Heroku via the command line and create a new app:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">heroku login\nheroku create</code></pre></div>\n<p>Verify the creation of your Heroku app by running <code>git remote -v</code>.</p>\n<p>Then run the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git add .\ngit commit -m “First”\ngit push -u origin master\ngit push heroku master</code></pre></div>\n<p>Navigate to the URL provided to verify deployment.</p>\n<p>In the future:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git add .\ngit commit -m “Ch-ch-ch-changes…”\ngit push heroku master</code></pre></div>\n<h2>MongoDB</h2>\n<p>Log into Heroku.com and find your app. Under Resources, search for <strong>mLab</strong> in the Add-ons input field and add it as a Provision. If there are no results, you need to add a credit card to your account. Don’t worry, it’s free.</p>\n<p>Just for fun, under Settings, reveal your app config variables. There it is, our MongoDB environment variable, <code>MONGODB_URI</code>. You will see how that is used below.</p>\n<p>Install Mongoose:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">npm install --save mongoose`</code></pre></div>\n<p>Add to server.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n  process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">MONGODB_URI</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"mongodb://localhost/mern\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    useNewUrlParser<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n    useUnifiedTopology<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Add <code>models</code> and <code>routes</code> directories to your app:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir models routes</code></pre></div>\n<p>To these add placeholder <code>index.js</code> files:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">touch models/index.js routes/index.js</code></pre></div>\n<h2>React</h2>\n<p>Install Create React App if you don’t already have it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g create-react-app</code></pre></div>\n<p>From within your the root directory of your app, run</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">create-react-app client</code></pre></div>\n<p>Now let’s connect the front to the back using concurrently and a proxy:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save concurrently</code></pre></div>\n<p>To the package.json in the root directory of your app, add two new scripts:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"node server.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"client\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"npm run start --prefix client\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"concurrently \\\"npm run start\\\" \\\"npm run client\\\"\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>To the package.json in your client directory, just below “private”, add:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;proxy&quot;: &quot;http://localhost:3001/&quot;,</code></pre></div>\n<p>From here you will start your app from its root directory with:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run dev</code></pre></div>\n<p>This will start both servers <em>concurrently</em>. Try it!</p>\n<h2>Heroku, Again</h2>\n<p>Add the path package:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save path</code></pre></div>\n<p>In server.js, replace the ‘Hello World!’ get route with the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token keyword\">static</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client/build\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">sendFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'client'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'build'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>All requests will be met with the <code>index.html</code> file as a response. From there, you will use ReactRouter.</p>\n<p>To the package.json in the root directory of your app, add one more script:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"heroku-postbuild\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NPM_CONFIG_PRODUCTION=false npm install --prefix client &amp;&amp; npm run build --prefix client\"</span></code></pre></div>\n<p>See also: <a href=\"https://devcenter.heroku.com/articles/nodejs-support#customizing-the-build-process\">https://devcenter.heroku.com/articles/nodejs-support#customizing-the-build-process</a></p>\n<p>Add, commit and push to Heroku. Verify that your app builds and is now live.</p>\n<p>Happy routing!</p>\n<p>The deployed application can be found <a href=\"https://stormy-beach-74916.herokuapp.com/\">https://stormy-beach-74916.herokuapp.com/</a></p>","frontmatter":{"title":"How to Scaffold a Boilerplate MERN Application and Deploy to Heroku","date":"December 30, 2019","description":"There's more than one way to scaffold a boilerplate MERN application and deploy it to Heroku. This method is straightforward and easy to maintain."}}},"pageContext":{"slug":"/mern-deploy-heroku/","previous":{"fields":{"slug":"/fork-yeah-cooking-computer-science-activism/"},"frontmatter":{"title":"Cooking, Computer Science, and Activitsm? Fork Yeah!"}},"next":{"fields":{"slug":"/fork-yeah-github-repository-commit/"},"frontmatter":{"title":"Create a GitHub Repository and Your First Commit"}}}}